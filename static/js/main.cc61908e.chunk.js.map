{"version":3,"sources":["model/dice/dice.js","lib/validator/dictionary.js","lib/validator/validator.js","model/game/game.js","elements/badge/badge.js","elements/dice/dice.js","elements/input/input.js","components/board/board.js","elements/logo/logo.js","components/list/list.js","elements/button/button.js","components/summary/summary.js","elements/timer/timer.js","components/game/game.js","components/homepage/home.js","App.js","serviceWorker.js","index.js"],"names":["Dice","letters","arguments","length","undefined","Object","classCallCheck","this","word","adjecents","currentIdx","array","target_indexes","reduce","acc","idx","push","Math","floor","random","Node","isCompleteString","children","TrieDictionary","rootNode","node","i","currentLetter","TextValidator","dictionary","self","fetch","then","res","text","split","forEach","insert","dices","selectedDices","startingDices","filter","dice","charAt","isValid","currentDice","shift","includes","isValidStringInput","substring","pop","find","answer","DICE_CONFIG","Boggle","map","answers","totalScore","timeLimit","validator","init","_rollDices","_addWildCards","_populateBoard","toLowerCase","isWordSubmitted","isValidWord","score","_getScore","rollDice","temp","_this","populateAdjacentDices","num","Badge","react_default","a","createElement","className","props","Component","Input","type","name","autoComplete","placeholder","onKeyDown","e","onChangeHandler","GameBoard","index","key","concat","src_elements_dice_dice","rows","targetDices","slice","row","_renderDices","_renderRows","input_input","Logo","id","List","badge_badge","_renderList","Button","onClick","onClickHandler","title","Summary","logo_logo","list_list","elements_button_button","Timer","possibleConstructorReturn","getPrototypeOf","call","state","time","prevProps","nextProps","snapshot","isStarted","setState","_setTimer","clearInterval","timer","setInterval","recordTimeOut","second","toString","minutes","_getMinutes","_getSeconds","Game","game","alphabets","toUpperCase","hasStarted","hasTimeOut","addWord","_addWord","bind","assertThisInitialized","startGame","_startGame","_recordTimeOut","nexProps","event","keyCode","target","value","lastAnswer","summary_summary","timer_timer","href","_renderBadge","board_board","_renderPage","HomePage","App","pages","components_game_game","nextPage","_nextPage","homepage_home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc61908e.chunk.js","sourcesContent":["class Dice {\n    constructor(letters = []) {\n        this.word = letters[0];\n        this.letters = letters;\n        this.adjecents = [];\n    }\n    \n    populateAdjacentDices(currentIdx, array = []) {\n        let target_indexes = [-5, -4, -3, -1, 1, 3, 4, 5];\n        if (currentIdx % 4 === 0) {\n            target_indexes = [-4, -3, 1, 4, 5];\n        } else if (currentIdx % 4 === 3) {\n            target_indexes = [-5, -4, -1, 3, 4];\n        }\n        this.adjecents = target_indexes.reduce((acc, idx) => {\n            idx = currentIdx + idx;\n            if ((idx >= 0 || idx <= 12) && array[idx]) {\n                acc.push(array[idx])\n            }\n            return acc;\n        }, []);\n    }\n\n    rollDice() {\n        let idx = Math.floor(Math.random() * this.letters.length);\n        this.word = this.letters[idx];\n    }\n\n}\n\nexport default Dice;\n","class Node {\n    constructor(word = '') {\n        this.word = word;\n        this.isCompleteString = false;\n        this.children = {}\n    }\n}\n\nclass TrieDictionary {\n    constructor() {\n        this.rootNode = new Node();\n    }\n\n    insert(word) {\n        let node = this.rootNode;\n\n        for (let i = 0; i < word.length; i++) {\n            let currentLetter = word[i];\n\n            if (!node.children[currentLetter]) {\n                node.children[currentLetter] = new Node(word[i])\n            }\n            node = node.children[currentLetter];\n\n            if (i === word.length - 1) {\n                node.isCompleteString = true;\n            }\n        }\n    }\n\n    find(word) {\n        let node = this.rootNode;\n\n        for (let i = 0; i < word.length; i++) {\n            let currentLetter = word[i];\n            if (!node.children[currentLetter]) {\n                return false;\n            }\n            node = node.children[currentLetter];\n\n            if (i === word.length - 1) {\n                return node.isCompleteString;\n            }\n        }\n    }\n}\n\nexport default TrieDictionary;\n","import TrieDictionary from \"./dictionary\";\n\nclass TextValidator {\n    constructor() {\n        this.dictionary = new TrieDictionary();\n    }\n\n    init() {\n        let self = this\n        fetch('./dictionary.txt')\n            .then(res => res.text())\n            .then(text => {\n                text.split(\"\\n\").forEach((word) => self.dictionary.insert(word));\n            });\n    }\n\n    isValidStringInput(word, dices = [], selectedDices = []) {\n        if (!word) {\n            return true;\n        }\n        let startingDices = dices.filter((dice) => dice.word === word.charAt(0) || dice.word === \"*\");\n        let isValid = false;\n\n        while (!isValid && startingDices.length > 0) {\n            let currentDice = startingDices.shift();\n            if (!selectedDices.includes(currentDice)) {\n                selectedDices.push(currentDice);\n                isValid = this.isValidStringInput(word.substring(1), currentDice.adjecents, selectedDices);\n                if (!isValid) {\n                    selectedDices.pop();\n                }\n            }\n\n        }\n        return isValid;\n    }\n\n\n    isWordSubmitted(word, answers = []) {\n        return answers.find((answer) => answer.word === word);\n    }\n\n\n    isValidWord(word) {\n        return this.dictionary.find(word);\n    }\n\n}\n\nexport default TextValidator\n","import Dice from '../dice/dice';\nimport TextValidator from '../../lib/validator/validator';\n\nconst DICE_CONFIG = [\n  ['d', 'e', 'i', 'l', 'r', 'x'],\n  ['h', 'l', 'n', 'n', 'r', 'z'],\n  ['d', 'e', 'l', 'r', 'v', 'y'],\n  ['e', 'l', 'r', 't', 't', 'y'],\n  ['e', 'h', 'r', 't', 'v', 'w'],\n  ['e', 'e', 'g', 'h', 'n', 'w'],\n  ['a', 'a', 'e', 'e', 'g', 'n'],\n  ['a', 'o', 'o', 't', 't', 'w'],\n  ['e', 'i', 'o', 's', 's', 't'],\n  ['e', 'e', 'i', 'n', 's', 'u'],\n  ['d', 'i', 's', 't', 't', 'y'],\n  ['a', 'f', 'f', 'k', 'p', 's'],\n  ['a', 'c', 'h', 'o', 'p', 's'],\n  ['c', 'i', 'm', 'o', 't', 'u'],\n  ['h', 'i', 'm', 'n', 'q', 'u'],\n  ['a', 'b', 'b', 'j', 'o', 'o'],\n];\n\nclass Boggle {\n  constructor() {\n    this.dices = DICE_CONFIG.map((dice) => new Dice(dice));\n    this.answers = [];\n    this.totalScore = 0;\n    this.timeLimit = 180;\n    this.validator = new TextValidator();\n    this.validator.init();\n  }\n  \n  init() {\n    this.answers = [];\n    this.totalScore = 0;\n    this._rollDices();\n    this._addWildCards(2);\n    this._populateBoard();\n  }\n  \n  addWord(word) {\n    word = word.toLowerCase();\n    if (this.validator.isValidStringInput(word, this.dices) && !this.validator.isWordSubmitted(word, this.answers) && this.validator.isValidWord(word)) {\n      this.answers.push({\n        word: word,\n        score: this._getScore(word),\n      });\n      this.totalScore += this._getScore(word);\n    }\n  }\n  \n  _getScore(word) {\n    let length = word.length;\n    if (length >= 8) {\n      return 11;\n    } else if (length === 7) {\n      return 5;\n    } else if (length === 6) {\n      return 5;\n    } else if (length === 5) {\n      return 2;\n    } else {\n      return 1;\n    }\n  }\n  \n  _rollDices() {\n    for (let i = 0; i < this.dices.length; i++) {\n      let idx = Math.floor(Math.random() * this.dices.length);\n      this.dices[i].rollDice();\n      this.dices[idx].rollDice();\n      let temp = this.dices[idx];\n      this.dices[idx] = this.dices[i];\n      this.dices[i] = temp;\n    }\n  }\n  \n  _populateBoard() {\n    this.dices.forEach((dice, currentIdx) => {\n      dice.populateAdjacentDices(currentIdx, this.dices);\n    });\n  }\n  \n  _addWildCards(num) {\n    while (num > 0) {\n      let idx = Math.floor(Math.random() * this.dices.length);\n      if (this.dices[idx].word !== \"*\") {\n        this.dices[idx].word = \"*\";\n        num--;\n      }\n    }\n  }\n}\n\nexport default Boggle;\n","import React, {Component} from 'react';\nimport './badge.css';\n\nclass Badge extends Component {\n  render() {\n    return (\n      <div className=\"badge\">\n        <div>{this.props.word}</div>\n        <div className=\"badgeTip\">\n          {this.props.score}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Badge;\n","import React, {Component} from 'react';\nimport './dice.css';\n\nclass Dice extends Component {\n    render() {\n        return (\n            <div className=\"tile\">\n                <div>{this.props.dice}</div>\n            </div>\n        );\n    }\n}\n\nexport default Dice;\n","import React, {Component} from 'react';\nimport './input.css';\n\nclass Input extends Component {\n    render() {\n        return (\n            <div className=\"inputWrapper\">\n                <input type=\"text\"\n                       name=\"word\"\n                       className=\"input\"\n                       autoComplete=\"off\"\n                       placeholder=\"Your Word\"\n                       onKeyDown={(e) => this.props.onChangeHandler(e)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Input;\n","import React, {Component} from 'react';\nimport Dice from '../../elements/dice/dice';\nimport Input from '../../elements/input/input';\nimport './board.css';\n\nclass GameBoard extends Component {\n  _renderDices(dices) {\n    return dices.map((dice, index) => {\n      let key = `${dice.word}-${index}`\n      return <Dice dice={dice} key={key}/>;\n    });\n  }\n  \n  _renderRows() {\n    let rows = [];\n    for (let i = 0; i < 4; i++) {\n      let targetDices = this.props.dices.slice(i * 4, i * 4 + 4);\n      rows.push(targetDices);\n    }\n    \n    return rows.map((row, index) => {\n      let key = `diceRow-${index}`;\n      return (\n        <div className=\"diceRow\" key={key}>\n          {this._renderDices(row)}\n        </div>\n      );\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"gameBoard\">\n        <div className=\"diceHolder\">\n          {this._renderRows()}\n        </div>\n        <Input onChangeHandler={this.props.onChangeHandler}/>\n      </div>\n    );\n  }\n}\n\nexport default GameBoard;\n","import React, {Component} from 'react';\nimport './logo.css';\n\nclass Logo extends Component {\n    render() {\n        return (\n          <div className=\"logo\">\n            <div className=\"text-blue dice\" id=\"logoOne\">B</div>\n            <div className=\"text-yellow dice\" id=\"logoTwo\">O</div>\n            <div className=\"text-blue dice\" id=\"logoThree\">G</div>\n            <div className=\"text-yellow dice\" id=\"logoFour\">G</div>\n            <div className=\"text-blue dice\" id=\"logoFive\">L</div>\n            <div className=\"text-yellow dice\" id=\"logoSix\">E</div>\n          </div>\n        );\n    }\n}\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport Badge from '../../elements/badge/badge';\nimport './list.css';\n\nclass List extends Component {\n  _renderList() {\n    return this.props.answers.map((answer) => {\n      let key = `${answer.word}-list-badge`;\n      return <Badge word={answer.word} score={answer.score} key={key}/>;\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"listWrapper\">\n        {this._renderList()}\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, {Component} from 'react';\nimport './button.css';\n\nclass Button extends Component {\n  render() {\n    return (\n      <div className=\"buttonWrapper\">\n        <button className=\"button\" onClick={this.props.onClickHandler}>{this.props.title}</button>\n      </div>\n    );\n  }\n}\n\nexport default Button;\n","import React, {Component} from 'react';\nimport Logo from '../../elements/logo/logo';\nimport List from '../list/list';\nimport Button from '../../elements/button/button';\nimport './summary.css';\n\n\nclass Summary extends Component {\n  render() {\n    return (\n      <div className=\"summary\">\n        <Logo/>\n        <div className=\"summaryBoard\">\n          <div>\n            Total Score: {this.props.totalScore}\n          </div>\n          <div>\n            Number of Words: {this.props.answers.length}\n          </div>\n        </div>\n        <List answers={this.props.answers}/>\n        <Button title=\"Again!\" onClickHandler={this.props.onClickHandler}/>\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","import React, {Component} from 'react';\nimport './timer.css';\n\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: this.props.timeLimit,\n    };\n  }\n  \n  componentDidUpdate(prevProps, nextProps, snapshot) {\n    if (!prevProps.isStarted && this.props.isStarted) {\n      this.setState({time: this.props.timeLimit});\n      this._setTimer();\n    } else if (prevProps.isStarted && !this.props.isStarted) {\n      clearInterval(this.timer);\n    }\n  }\n  \n  _setTimer() {\n    let self = this;\n    if (self.props.isStarted === true) {\n      self.timer = setInterval(() => {\n        let time = self.state.time - 1;\n        if (time === 0) {\n          clearInterval(self.timer);\n          self.props.recordTimeOut();\n        } else {\n          self.setState({\n            time: time,\n          });\n        }\n      }, 1000);\n    }\n  }\n  \n  _getSeconds() {\n    let second = Math.floor(this.state.time % 60).toString();\n    second = (second.length === 1) ? '0' + second : second;\n    return second;\n  }\n  \n  _getMinutes() {\n    let minutes = Math.floor(this.state.time / 60).toString();\n    minutes = (minutes.length === 1) ? '0' + minutes : minutes;\n    return minutes;\n  }\n  \n  render() {\n    return (\n      <div className=\"timer\">\n        <div className=\"minutes\">\n          {this._getMinutes()}\n        </div>\n        <div className=\"seperator\">:</div>\n        <div className=\"second\">\n          {this._getSeconds()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, {Component} from 'react';\nimport Boggle from '../../model/game/game';\nimport Badge from '../../elements/badge/badge';\nimport GameBoard from '../board/board';\nimport Summary from '../summary/summary';\nimport Timer from '../../elements/timer/timer';\nimport './game.css';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.game = new Boggle();\n    this.state = {\n      alphabets: this.game.dices.map((dice) => dice.word.toUpperCase()),\n      hasStarted: false,\n      hasTimeOut: false,\n      totalScore: this.game.totalScore,\n      answers: this.game.answers,\n    };\n    this.addWord = this._addWord.bind(this);\n    this.startGame = this._startGame.bind(this);\n    this.recordTimeOut = this._recordTimeOut.bind(this);\n  }\n  \n  componentDidMount() {\n    this._startGame()\n  }\n  \n  componentDidUpdate(prevProps, nexProps, snapshot) {\n    if (nexProps.alphabets !== this.state.alphabets) {\n      this.setState({\n        hasStarted: true,\n        hasTimeOut: false,\n      });\n    }\n  }\n  \n  _addWord(event) {\n    if (this.state.hasTimeOut === false && event.keyCode === 13 && event.target.value.length > 0) {\n      this.game.addWord(event.target.value);\n      this.setState({\n        answers: this.game.answers,\n        totalScore: this.game.totalScore,\n      });\n      event.target.value = '';\n    }\n  }\n  \n  _recordTimeOut() {\n    this.setState({\n      hasTimeOut: true,\n    });\n  }\n  \n  _startGame() {\n    this.game.init();\n    this.setState({\n      alphabets: this.game.dices.map((dice) => dice.word.toUpperCase()),\n      hasStarted: false,\n      hasTimeOut: false,\n      totalScore: this.game.totalScore,\n      answers: this.game.answers,\n    });\n  }\n  \n  _renderBadge() {\n    let lastAnswer = this.state.answers[this.state.answers.length - 1];\n    if (lastAnswer) {\n      return (\n        <Badge word={lastAnswer.word} score={lastAnswer.score}/>\n      );\n    }\n  }\n  \n  _renderPage() {\n    if (this.state.hasTimeOut) {\n      return (\n        <Summary totalScore={this.state.totalScore}\n                 answers={this.state.answers}\n                 onClickHandler={this.startGame}\n        />\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"headerWrapper\">\n            <Timer isStarted={this.state.hasStarted}\n                   timeLimit={this.game.timeLimit}\n                   recordTimeOut={this.recordTimeOut}\n            />\n            \n            <div className=\"textWhite\">\n              {this.state.totalScore}\n            </div>\n            \n            <div>\n              <a href=\"#\" className=\"textLink\" onClick={this.startGame}>Restart</a>\n            </div>\n          </div>\n          \n          <div className=\"bodyWrapper\">\n            {this._renderBadge()}\n            <GameBoard dices={this.state.alphabets}\n                       onChangeHandler={this.addWord}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        {this._renderPage()}\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, {Component} from 'react';\nimport Logo from '../../elements/logo/logo';\nimport Button from '../../elements/button/button'\nimport './home.css';\n\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"homePage\">\n        <Logo/>\n        <Button title=\"PLAY!\" onClickHandler={this.props.onClickHandler}/>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Game from './components/game/game';\nimport HomePage from './components/homepage/home';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pages = [, <Game/>];\n    this.state = {\n      currentIdx: 0,\n    };\n    this.nextPage = this._nextPage.bind(this);\n  }\n  \n  _nextPage() {\n    this.setState({currentIdx: 1});\n  }\n  \n  _renderPage() {\n    if (this.state.currentIdx === 0) {\n      return (<HomePage onClickHandler={this.nextPage}/>);\n    }\n    return (<Game/>);\n  }\n  \n  render() {\n    return (\n      <div className=\"app\">\n        {this._renderPage()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}